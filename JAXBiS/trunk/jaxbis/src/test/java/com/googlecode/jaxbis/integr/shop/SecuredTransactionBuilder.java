/**
 *
 * Copyright (c) 2010, Joachim Draeger, Jon Herrmann, Simon MÃ¼ller
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *
 *     * Neither the name of JAXBiS nor the names of its contributors may
 *       be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package com.googlecode.jaxbis.integr.shop;
import com.googlecode.jaxbis.crypt.KeyRing;

import com.googlecode.jaxbis.api.SecuredObjectBuilder;

import com.googlecode.jaxbis.crypt.SecuredMemberBuilder;
import com.googlecode.jaxbis.api.SecurityType;

/*
 * JAXBIS AUTOGENERATED CLASS
 * TODO: Auto-generated class stub
 */

public class SecuredTransactionBuilder
    implements SecuredObjectBuilder<Transaction, SecuredTransaction> {
    private KeyRing keyRing;
 
    public SecuredTransactionBuilder(final KeyRing keyRing) {
        this.keyRing = keyRing;
    }
    public SecuredTransaction createOrNull(
        final Transaction unsecuredObject) {
        if (unsecuredObject != null) {
            return create(unsecuredObject);
        } else {
            return null;
        }
    }
    
    public SecuredTransaction create(
        final Transaction unsecuredObject) {
   
        final SecuredTransaction securedObject = new SecuredTransaction();
        final SecuredMemberBuilder secMemBuilder = new SecuredMemberBuilder(
            keyRing);
       
        securedObject.setAmount(
            unsecuredObject.getAmount());
        securedObject.setAccountNumber(
            unsecuredObject.getAccountNumber());
       

       
        securedObject.setSecuredCreditCardNo(
            secMemBuilder.createSecuredMemberOrNull(
                unsecuredObject.getCreditCardNo(),
                "creditCardNo",
                SecurityType.ENCRYPTION)
         );



        
        return securedObject;
    }
}
