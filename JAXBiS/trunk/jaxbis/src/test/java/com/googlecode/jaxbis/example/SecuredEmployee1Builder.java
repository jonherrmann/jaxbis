/**
 *
 * Copyright (c) 2010, Joachim Draeger, Jon Herrmann, Simon MÃ¼ller
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *
 *     * Neither the name of JAXBiS nor the names of its contributors may
 *       be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */



package com.googlecode.jaxbis.example;
import com.googlecode.jaxbis.crypt.KeyRing;

import com.googlecode.jaxbis.api.SecuredObjectBuilder;

import com.googlecode.jaxbis.crypt.SecuredMemberBuilder;
import com.googlecode.jaxbis.api.SecurityType;
import com.googlecode.jaxbis.crypt.CollectionWrapper;
import com.googlecode.jaxbis.crypt.SecuredCollectionBuilder;

/*
 * JAXBIS AUTOGENERATED CLASS
 */

public class SecuredEmployee1Builder
    implements SecuredObjectBuilder<Employee1, SecuredEmployee1> {
    private KeyRing keyRing;
 
    public SecuredEmployee1Builder(final KeyRing keyRing) {
        this.keyRing = keyRing;
    }
    public SecuredEmployee1 createOrNull(
        final Employee1 unsecuredObject) {
        if (unsecuredObject != null) {
            return create(unsecuredObject);
        } else {
            return null;
        }
    }
    
    public SecuredEmployee1 create(
        final Employee1 unsecuredObject) {
   
        final SecuredEmployee1 securedObject = new SecuredEmployee1();
        final SecuredMemberBuilder secMemBuilder = new SecuredMemberBuilder(
            keyRing);
       
        securedObject.setMiddleName(
            unsecuredObject.getMiddleName());
        securedObject.setDateOfHire(
            unsecuredObject.getDateOfHire());
        securedObject.setSurname(
            unsecuredObject.getSurname());
        securedObject.setGivenName(
            unsecuredObject.getGivenName());
        securedObject.setSalutation(
            unsecuredObject.getSalutation());
        securedObject.setEmailAddresses(
            unsecuredObject.getEmailAddresses());
       
        securedObject.setPositions(
                SecuredCollectionBuilder.create(
                new com.googlecode.jaxbis.example.SecuredPosition1Builder(
                    keyRing), unsecuredObject.getPositions()));

       
        securedObject.setSecuredDateOfBirth(
            secMemBuilder.createSecuredMemberOrNull(
            unsecuredObject.getDateOfBirth(),
            "dateOfBirth",
            SecurityType.ENCRYPTION)
         );

        securedObject.setSecuredPhoneNumbers(
            secMemBuilder.createSecuredMember(
                new CollectionWrapper(unsecuredObject.getPhoneNumbers()),
                "phoneNumbers",
                SecurityType.ENCRYPTION)
         );

        securedObject.setSecuredBoss(
            secMemBuilder.createSecuredMemberOrNull(
            new com.googlecode.jaxbis.example.SecuredEmployee1Builder(
                keyRing).createOrNull(
                    unsecuredObject.getBoss()),
            "boss",
            SecurityType.ENCRYPTION)
                
         );
        securedObject.setSecuredSalary(
            secMemBuilder.createSecuredMemberOrNull(
            new com.googlecode.jaxbis.example.SecuredSalary1Builder(
                keyRing).createOrNull(
                    unsecuredObject.getSalary()),
            "salary",
            SecurityType.ENCRYPTION)
                
         );
        securedObject.setSecuredLivesAt(
            secMemBuilder.createSecuredMemberOrNull(
            new com.googlecode.jaxbis.example.SecuredAddress1Builder(
                keyRing).createOrNull(
                    unsecuredObject.getLivesAt()),
            "livesAt",
            SecurityType.ENCRYPTION)
                
         );

        securedObject.setSecuredFormalyLivedAt(
            secMemBuilder.createSecuredMemberFromCollection(
                SecuredCollectionBuilder.create(
                new com.googlecode.jaxbis.example.SecuredAddress1Builder(
                    keyRing), unsecuredObject.getFormalyLivedAt()),
                com.googlecode.jaxbis.example.SecuredAddress1.class,    
                "formalyLivedAt",
                SecurityType.ENCRYPTION)
        );
        
        return securedObject;
    }
}
